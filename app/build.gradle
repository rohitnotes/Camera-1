apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.fabric'

def globalConf = rootProject.ext
def keys = new Properties()
file("keys.properties").withInputStream {
    stream -> keys.load(stream)
}

android {
    compileSdkVersion globalConf.compileSdkVersion
    buildToolsVersion globalConf.buildToolsVersion

    defaultConfig {
        applicationId globalConf.applicationId
        minSdkVersion globalConf.minSdkVersion
        targetSdkVersion globalConf.targetSdkVersion
        versionCode globalConf.versionCode
        versionName globalConf.versionName
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [fabric_io_id: keys.KEY_FABRIC]
        resConfigs "en", "ru"


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            debuggable = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    Map<String, String> dependencies = globalConf.dependencies

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation dependencies.kotlin
    implementation dependencies.kotlinJDK7
    implementation dependencies.appCompat
    implementation dependencies.constrainLayout
    implementation dependencies.customTabs
    implementation dependencies.daggerAndroid
    implementation dependencies.design
    implementation dependencies.glide
    implementation dependencies.gVision
    implementation dependencies.firebaseAnalytics
    implementation(dependencies.fabricCrashlitics) {
        transitive = true
    }

    kapt dependencies.daggerKapt
    kapt dependencies.daggerAndroidProcessor
    compileOnly dependencies.dagger
    annotationProcessor dependencies.glide
    testImplementation dependencies.junit
    androidTestImplementation(dependencies.espresso) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}


apply plugin: 'com.google.gms.google-services'
